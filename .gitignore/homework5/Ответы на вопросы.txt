1. Почему в большинстве ситуаций стоит использовать flexbox-позиционирование?
Flexbox предназначен для создания гибких макетов. С помощью этой технологии можно очень удобно и быстро распределять и выравнивать элементы.

2. Самостоятельно изучи способ позиционирования через `display: table`  и ответьте на вопрос, для каких ситуаций оно лучше всего подходит? 
display: table используется для отображения инормации в виде таблицы. Вложенные элементы должны отображаться как строка таблицы и ячейка таблицы.
С его помощью можно получить истинное выравнивание по вертикали элементов с динамической высотой.

3. Какие есть оси во флекс-верстке и как задается их направление?
Главная (слева направо) и поперечная (сверху вниз).

4. Разберитесь, как работает свойство `margin: auto` во флекс-верстке, приведите пример использования
Блок центрируется по горизонтали. Для вертикального выравнивания это не работает.
ul {
  display: flex;
}

#login {
  margin-left: auto;
}
________________________________
<nav>
  <ul>
    <li><a href=/about>About</a>
    <li><a href=/projects>Projects</a>
    <li><a href=/interact>Interact</a>
    <li id="login"><a href=/login>Login</a>
  </ul>
</nav>

5. В чем преимущества `box-sizing`?
Позволяет не "раздувать" блок за счет добавления к width и height внешних и внутренних отступов, а также границ.

6. Чем отличается `flex-grow` от `flex-shrink`?
flex-grow определяет, может ли начальная ширина flex-элемента увеличиваться за счет свободного пространства блока.
flex-shrink определяет возможность flex-элемента ужиматься. 

7. Как можно добиться следующего позиционирования элементов:
justify-content: space-between

8. Какой в итоге будет размер у элемента (можно округлить)?
width: 283px
height: 18px

9. Самостоятельно разберись, зачем нужно свойство `order`?
order устанавливает порядок расположения элементов внутри контейнера. Эта функция позволяет, например, перемещать элементы внутри контейнера при открытии страницы на разных устройствах.
При этом элементы, у которых order не указан, располагаются первыми.

10. Каким кодом можно сделать такую таблицу?
<!DOCTYPE html>
<html>
    <head>
        <title>Таблица</title>
    </head>
    <body>
        <table  border="1" style="width: 50%; text-align: center;">
        <tr>
            <th>Columu1</th>
            <th>Columu2</th>
            <th>Columu3</th>
        </tr>
        <tr>
            <td rowspan="2">Row 1 Cell 1</td>
            <td>Row 1 Cell 2</td>
            <td>Row 1 Cell 3</td>
        </tr>
        <tr>
            <td>Row 2 Cell 1</td>
            <td>Row 2 Cell 3</td>
        </tr>
        <tr class="tr3">
            <td colspan="3">Row 3 Cell 1</td>
        </table>
    </body>
</html>

11. Как рассчитывается размер flex-контейнера?
Как сумма влодящих в него элементов с учетом width, height, padding, border и margin